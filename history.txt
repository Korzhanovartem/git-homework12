    1  git config
    2  git config
    3  git config --global
    4  git config --global user.name 
    5  git config --global user.name 'Artem Korzhanov'
    6  git config
    7  git config --global user.name "artem"
    8  git config --global user.name
    9  git config --global user.email "korzhanovartem@gmail.com"
   10  git config --global user.email "korzhanovartem@gmail.com"
   11  git config --list
   12  cd
   13  ssh-keygen
   14  cat .ssh
   15  cat .ssh/id_ed25519
   16  cat .ssh/id_ed25519                                                                                            id_ed25519      id_ed25519.pub
   17  cat .ssh/id_ed25519                                                                                            id_ed25519      id_ed25519.pub
   18  cat ~/.ssh/id_ed25519.pub
   19  [200~ssh ec2-user@linux.itcareerhub.de~
   20  ssh ec2-user@linux.itcareerhub.de
   21  ssh ec2-user@linux.itcareerhub.de
   22  % scp ec2-user@linux.itcarrerhub.de:/opt/131224-wdm/ArtemK/file.txt
   23  cd
   24  ssh ec2-user@linux.itcareerhub.de
   25  [200~ec2-user@linux.itcareerhub.de~
   26  ec2-user@linux.itcareerhub.de 
   27  [200~ec2-user@linux.itcareerhub.de~
   28  ssh [200~ec2-user@linux.itcareerhub.de~
   29  ssh ec2-user@linux.itcareerhub.de
   30  ssh ec2-user@linux.itcareerhub.dessh ec2-user@linux.itcareerhub.de
   31  ssh ec2-user@linux.itcareerhub.de
   32  linux.itcarrerhub.de
   33  ssh linux.itcarrerhub.de
   34  [200~ssh artemk@linux.itcareerhub.de
   35  ssh artemk@linux.itcareerhub.de
   36  artemk@linux.itcareerhub.de
   37  ssh artemk@linux.itcareerhub.de
   38  ssh ec2-user@linuxitcarrerhub.de
   39  clip < ~/.ssh/id_ed25519.pub
   40  clip < ~/.ssh/id_ed25519.pub
   41  clip < ~/.ssh/id_ed25519.pub
   42  ssh ec2-user@linux.itcareerhub.de
   43  ssh ec2-user@linux.itcareerhub.de
   44  cd
   45  cat .ssh/
   46  cat .ssh/
   47  cat .ssh/
   48  ls -al ~/.ssh
   49  ssh-keygen -t rsa -b 4096 -C "korzhanovartem@gmail.com"
   50  clip < ~/.ssh/id_rsa.pub
   51  echo "Hello" >> READMR
   52  echo "Hello" >> README.md
   53  git init
   54  git branch
   55  cd .git/
   56  ls -la
   57  cd ..
   58  git status
   59  git commit -m "file README.md"
   60  git branch -M main
   61  git remote add origin git@github.com:https://github.com/Korzhanovartem/testArtemK.git
   62  ls -la
   63  git remote -v
   64  git push
   65  git add README.md
   66  git status
   67  ls
   68  ec2-user@linux.itcareerhub.de
   69  ec2-user@linux.itcareerhub.de
   70  ssh ec2-user@linux.itcareerhub.de
   71  [200~
   72  ssh ec2-user@linux.itcareerhub.de
   73  ssh ec2-user@linux.itcareer.de
   74   ssh ec2-user@linux.itcareerhub.de
   75  /c/Users/terra/Desktop/workDoc/ITcarrerhub/git-intro-test
   76  mkdir git_intro
   77  cd git_intro
   78  git init
   79  cp [200~/c/Users/terra/Downloads/wann-wird-das-erfolgsmodell-abgeloest-amg-kuendigt-gt3-nachfolger-fuer-2025-an-18962.jpg~
   80  cp /c/Users/terra/Downloads/gettyimages-2188542308-612x612.jpg
   81  cp /c/Users/terra/Downloads/gettyimages-2188542308-612x612.jpg .
   82  ls
   83  git add .
   84  git commit -m "Добавил изображение"
   85  git push origin master
   86  git add .
   87  git commit -m "Добавил изображение"
   88  git push origin master
   89  lsls
   90  ls
   91  git syatus
   92  git status
   93  git remote add origin https://github.com/Korzhanovartem/git_intro.git
   94  git remote -v
   95  git status
   96  ls
   97  git add .
   98  git commit -m "Добавил изображение"
   99  git push origin master
  100  touch myfirstbashscript.sh
  101  #!/bin/bash 
  102  USER="ARTEM_KORZHANOV
  103  nano myfirstbashscript.sh
  104  nano myfirstbashscript.sh
  105  chmod +x myfirstbashscript.sh
  106  ./myfirstbashscript.sh
  107  ./myfirstbashscript.sh > result.txt
  108  ./myfirstbashscript.sh > result.txt
  109  ./myfirstbashscript.sh > result.txt
  110   ./myfirstbashscript.sh > result.txt
  111  cat result.txt
  112  ./myfirstbashscript.sh > result.txt
  113  #!/bin/bash 
  114  USER="ARTEM_KORZHANOV"
  115  echo "28.02.2025: $(date)"
  116  echo "Hello, $USER!"
  117  echo "Working directory: $(pwd)"
  118  PROCESS_COUNT=$(ps -ef | grep bioset | grep -v grep | wc -1)
  119  echo "Number of processes bioset: $PROCESS_COUNT"
  120  FILE_PERMISSIONS=$(ls -1 /etc/passwd | awk '{print $1}')
  121  echo "File rights /etc/passwd: $FILE_PERMISSONS"
  122  #!/bin/bash 
  123  USER="ARTEM_KORZHANOV"
  124  echo "28.02.2025: $(date)"
  125  echo "Hello, $USER!"
  126  echo "Working directory: $(pwd)"
  127  PROCESS_COUNT=$(ps -ef | grep bioset | grep -v grep | wc -1)
  128  echo "Number of processes bioset: $PROCESS_COUNT"
  129  FILE_PERMISSIONS=$(ls -1 /etc/passwd | awk '{print $1}')
  130  echo "File rights /etc/passwd: $FILE_PERMISSONS"
  131  #!/bin/bash 
  132  USER="ARTEM_KORZHANOV"
  133  echo "28.02.2025: $(date)"
  134  echo "Hello, $USER!"
  135  echo "Working directory: $(pwd)"
  136  PROCESS_COUNT=$(ps -ef | grep bioset | grep -v grep | wc -1)
  137  echo "Number of processes bioset: $PROCESS_COUNT"
  138  FILE_PERMISSIONS=$(ls -1 /etc/passwd | awk '{print $1}')
  139  echo "File rights /etc/passwd: $FILE_PERMISSONS"
  140  #!/bin/bash 
  141  USER="ARTEM_KORZHANOV"
  142  echo "28.02.2025: $(date)"
  143  echo "Hello, $USER!"
  144  echo "Working directory: $(pwd)"
  145  PROCESS_COUNT=$(ps -ef | grep bioset | grep -v grep | wc -1)
  146  echo "Number of processes bioset: $PROCESS_COUNT"
  147  FILE_PERMISSIONS=$(ls -1 /etc/passwd | awk '{print $1}')
  148  echo "File rights /etc/passwd: $FILE_PERMISSONS"
  149  #!/bin/bash 
  150  USER="ARTEM_KORZHANOV"
  151  echo "28.02.2025: $(date)"
  152  echo "Hello, $USER!"
  153  echo "Working directory: $(pwd)"
  154  PROCESS_COUNT=$(ps -ef | grep bioset | grep -v grep | wc -1)
  155  echo "Number of processes bioset: $PROCESS_COUNT"
  156  FILE_PERMISSIONS=$(ls -1 /etc/passwd | awk '{print $1}')
  157  echo "File rights /etc/passwd: $FILE_PERMISSONS"
  158  #!/bin/bash 
  159  USER="ARTEM_KORZHANOV"
  160  echo "28.02.2025: $(date)"
  161  echo "Hello, $USER!"
  162  echo "Working directory: $(pwd)"
  163  PROCESS_COUNT=$(ps -ef | grep bioset | grep -v grep | wc -1)
  164  echo "Number of processes bioset: $PROCESS_COUNT"
  165  FILE_PERMISSIONS=$(ls -1 /etc/passwd | awk '{print $1}')
  166  echo "File rights /etc/passwd: $FILE_PERMISSONS"
  167  #!/bin/bash 
  168  USER="ARTEM_KORZHANOV"
  169  echo "28.02.2025: $(date)"
  170  echo "Hello, $USER!"
  171  echo "Working directory: $(pwd)"
  172  PROCESS_COUNT=$(ps -ef | grep bioset | grep -v grep | wc -1)
  173  echo "Number of processes bioset: $PROCESS_COUNT"
  174  FILE_PERMISSIONS=$(ls -1 /etc/passwd | awk '{print $1}')
  175  echo "File rights /etc/passwd: $FILE_PERMISSONS"
  176  #!/bin/bash 
  177  USER="ARTEM_KORZHANOV"
  178  echo "28.02.2025: $(date)"
  179  echo "Hello, $USER!"
  180  echo "Working directory: $(pwd)"
  181  PROCESS_COUNT=$(ps -ef | grep bioset | grep -v grep | wc -1)
  182  echo "Number of processes bioset: $PROCESS_COUNT"
  183  FILE_PERMISSIONS=$(ls -1 /etc/passwd | awk '{print $1}')
  184  echo "File rights /etc/passwd: $FILE_PERMISSONS"
  185  #!/bin/bash 
  186  USER="ARTEM_KORZHANOV"
  187  echo "28.02.2025: $(date)"
  188  echo "Hello, $USER!"
  189  echo "Working directory: $(pwd)"
  190  PROCESS_COUNT=$(ps -ef | grep bioset | grep -v grep | wc -1)
  191  echo "Number of processes bioset: $PROCESS_COUNT"
  192  FILE_PERMISSIONS=$(ls -1 /etc/passwd | awk '{print $1}')
  193  echo "File rights /etc/passwd: $FILE_PERMISSONS"
  194  cat myfirstbashscript.sh
  195  mkdir git-branch
  196  cd git-branch
  197  git init
  198  git checkout -b gitignore
  199  *.log
  200  *.tmp
  201  node_modules/
  202  git add .gitignore
  203  git commit -m "Добавлен файл .gitignore"
  204  git remote add origin https://github.com/yourusername/git-branch.git
  205  git push -u origin gitignore
  206  git clone https://github.com/Archakov06/react-beginner-projects.git
  207  git clone https://github.com/Korzhanovartem/git-branch.git
  208  git clone https://github.com/Korzhanovartem/git-branch.git
  209  git clone git@github.com:Korzhanovartem/Test.git~
  210  git clone git@github.com:Korzhanovartem/Test.git~
  211  ~ % cd ~/Desktop
  212  git clone [200~
  213  git clone git@github.com:Korzhanovartem/Test.git
  214  ls -la
  215  git clone git@github.com:Korzhanovartem/ionichu.git
  216  cd ~/C:\Users\terra\Desktop\Linux
  217  cd C:\Users\terra\Desktop\Linux
  218  https://github.com/Korzhanovartem/ionichu.git
  219  git remote add upstream https://github.com/iohichu/L18.03.git
  220  git remote -v
  221  git checkout -b new-folder
  222  git branch
  223  mkdir -p test
  224  mkdir -p test ; touch test/test.txt
  225  ls -la
  226  git status
  227  git add .
  228  ssh ec2-user@linux.itcareerhub.de
  229  git commit git@github.com:Korzhanovartem/hm12.git
  230  git commit git@github.com:Korzhanovartem/hm12.git
  231  main
  232  git status
  233  св
  234  cd
  235  mkdir git-merge-test
  236  git-merge-test % git init .
  237  git branch -m main
  238  git branch
  239  git commit -m "we are commiting the initial content"
  240  git checkout -b new_branch_to_merge_later
  241  git branch
  242  ls -la
  243  git-merge-test % ls -la
  244  git-merge-test % echo "totally different content to merge later" > merge.txt
  245  git branch -m main
  246  git-merge-test % git fetch origin main
  247  git checkout main
  248  Linux_HW % cd ~/Desktop
  249  gh --version
  250  mkdir 123
  251  > 123/1.txt
  252  rm -r 123/
  253  env
  254  ssh ec2-user@linux.itcareerhub.de
  255  ssh ec2linux@itcarrerhub.com
  256  ssh ec2-linux@itcarrerhub.com
  257  ssh ec2-user@linux.itcarrer.de
  258  ssh ec2-user@linux.itcareerhub.de
  259  ssh ec2-user@linux.itcareerhub.de
  260  git clone https://github.com/Korzhanovartem/git-homework12.git
  261  cd git-homework12
  262  echo "*.log" > .gitignore
  263  git add .gitignore
  264  git add .gitignore
  265  git commit -m "Добавлен .gitignore"
  266  git push origin main
  267  git checkout -b feature
  268  echo "# Git Homework" > README.md
  269  echo "*.tmp" >> .gitignore
  270  git add README.md .gitignore
  271  git add README.md .gitignore
  272  git commit -m "Добавлены README.md и был обновлен .gitignore"
  273  git push origin feature
  274  git commit --amend -m "Добавлены README.md и обновлен .gitignore (ammend)"
  275  git push origin feature --force
  276  git checkout main
  277  git merge features
  278  gir merge features
  279  git merge features
  280  git push origin main
  281  history > history.txt
